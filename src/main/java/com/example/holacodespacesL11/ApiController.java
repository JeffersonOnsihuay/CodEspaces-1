package com.example.holacodespacesL11;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
//import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
//import org.springframework.web.bind.annotation.PathVariable;
// imports for use List, Map, String and Object
//import java.util.List;
//import java.util.Map;
//import java.lang.String;
//import java.lang.Object;

// import org.springframework.jdbc.core.JdbcTemplate;

@Controller	// This means that this class is a Controller
@RequestMapping(path="/api/curso") // This means URL's start with /demo (after Application path)
public class ApiController  {
	@Autowired // This means to get the bean called userRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private CursoRepository CursoRepository;

	// @Autowired
  	// private JdbcTemplate jdbcTemplate;

	@PostMapping(path="/nuevo") // Map ONLY POST Requests
	public @ResponseBody String addNeCursos (@RequestParam String name
			, @RequestParam Integer creditos) {
		Curso n = new Curso();
		n.setName(name);
		n.setCreditos(creditos);
		CursoRepository.save(n);
		return "Saved";
	}

	@DeleteMapping(path="/eliminar")
	public @ResponseBody String deCursos (@RequestParam Integer id) {
		Curso n = new Curso();
		n.setId(id);
		CursoRepository.delete(n);
		return "Deleted";
	}

	// @PutMapping(path="/edit")
	// public @ResponseBody String editUser (@RequestParam Integer id, @RequestParam String name
	// , @RequestParam String email) {
	// 	Curso n = new Curso();
	// 	n.setId(id);
	// 	n.setName(name);
	// 	n.setEmail(email);
	// 	userRepository.save(n);
	// 	return "Updated";
	// }


	@GetMapping(path="/listar")
	public @ResponseBody Iterable<Curso> getAllCursos() {
		return CursoRepository.findAll();
	}

	// @GetMapping(path="/get/{id}")
	// public @ResponseBody Curso getOneUser(@PathVariable Integer id) {
	// 	return userRepository.findById(id).orElse(null);
	// }


	// @GetMapping(path="/get/report")
	// public @ResponseBody List<Map<String, Object>> getReport() {
	// 	List<Map<String, Object>> queryResult = jdbcTemplate.queryForList("SELECT CONCAT(name, ' ==> ', email) as mycol FROM user");
	// 	return queryResult;
	// }


}